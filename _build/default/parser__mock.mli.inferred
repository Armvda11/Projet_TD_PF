type token =
    WHILE
  | VIRG
  | TRUE
  | STATIC
  | SLASH
  | RETURN
  | REF
  | RAT
  | PV
  | PRINT
  | PO
  | PLUS
  | PF
  | NUM
  | NULL
  | NEW
  | MULT
  | INT
  | INF
  | IF
  | ID of string
  | FALSE
  | EQUAL
  | EOF
  | ENTIER of int
  | ELSE
  | DENOM
  | CONST
  | CO
  | CF
  | BOOL
  | AO
  | AF
val menhir_begin_marker : int
val xv_typ : Type.typ
val xv_separated_nonempty_list_VIRG_param_ :
  (Type.typ * string * AstSyntaxPres.default option) list
val xv_separated_nonempty_list_VIRG_e_ : AstSyntaxPres.expression list
val xv_separated_list_VIRG_param_ :
  (Type.typ * string * AstSyntaxPres.default option) list
val xv_separated_list_VIRG_e_ : AstSyntaxPres.expression list
val xv_prog : AstSyntaxPres.programme
val xv_param : Type.typ * string * AstSyntaxPres.default option
val xv_option_d_ : AstSyntaxPres.default option
val xv_main : AstSyntaxPres.programme
val xv_loption_separated_nonempty_list_VIRG_param__ :
  (Type.typ * string * AstSyntaxPres.default option) list
val xv_loption_separated_nonempty_list_VIRG_e__ :
  AstSyntaxPres.expression list
val xv_list_i_ : Ast.AstSyntax.bloc
val xv_list_globale_ : AstSyntaxPres.variable_globale list
val xv_list_fonc_ : AstSyntaxPres.fonction list
val xv_i : AstSyntaxPres.instruction
val xv_globale : AstSyntaxPres.variable_globale
val xv_fonc : AstSyntaxPres.fonction
val xv_e : AstSyntaxPres.expression
val xv_d : AstSyntaxPres.default
val xv_bloc : Ast.AstSyntax.bloc
val xv_af : AstSyntaxPres.affectable
val menhir_end_marker : int
